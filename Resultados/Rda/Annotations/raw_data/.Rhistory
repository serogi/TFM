library(KEGGgraph)
library(igraph)
library(graph)
library(hipathia)
hipath <- setwd("/home/sromera/Documents/TFM/scripts_hipathia")
source(paste0(hipath, "/private/pathways/scripts/graphs.R"))
source(paste0(hipath, "/private/pathways/scripts/KEGG_net.R"))
source(paste0(hipath, "/private/pathways/scripts/layout.R"))
#home <- setwd("/home/sromera/R")
source(paste0(hipath, "/private/hipathia/R/utils.R"))
source('~/.active-rstudio-document')
species <- c("hsa", "rno", "mmu", "dme")
hipath <- setwd("/home/sromera/Documents/TFM/scripts_hipathia")
source(paste0(hipath, "/private/pathways/scripts/graphs.R"))
source(paste0(hipath, "/private/pathways/scripts/KEGG_net.R"))
source(paste0(hipath, "/private/pathways/scripts/layout.R"))
#home <- setwd("/home/sromera/R")
source(paste0(hipath, "/private/hipathia/R/utils.R"))
library(KEGGgraph)
library(igraph)
library(graph)
library(hipathia)
species <- c("hsa", "rno", "mmu")
for(spe in species){
# Declaramos los directorios desde donde sacamos la información de las especies
kgml.folder <- paste0(hipath, "/private/pathways/", spe, "/kgml/")
sif.folder <- paste0(hipath, "/private/pathways/", spe, "/sif")
tmp.folder <- paste0(hipath, "/private/pathways/", spe, "/temp/")
ammend.file <- paste0(hipath, "/private/pathways/sif_amendments.txt")
pathway.names <- unique(gsub(".xml", "", list.files(kgml.folder,
pattern="xml")))
# Creamos nuevos directorios
if(!dir.exists(sif.folder))
dir.create(sif.folder)
if(!dir.exists(tmp.folder))
dir.create(tmp.folder)
# Cargamos las anotaciones con load_annots(base_de_datos,especie)
dbannot <- hipathia:::load_annots("uniprot", spe)
entrez2hgnc <- hipathia:::load_entrez_hgnc(spe) # Atento a este porque en el script de Marta va separado por puntos y no por _
# Procesar los ficheros KGML
#--------------------------------------------
# Creamos el fichero name_pathways.txt
create.pathway.names.file(pathway.names, spe, kgml.folder, sif.folder)
# Transformamos KGML a archivos SIF
transform.XML.to.SIF(pathway.names, kgml.folder, sif.folder)
# Cargamos los pathways desde los archivos SIF
pgs <- load.graphs(sif.folder, spe)
save(pgs, file=paste0(tmp.folder, "/pgs.RData"))
# ¿Corregimos los pathways?
appgs <- amend.kegg.pathways(ammend.file, pgs, spe)
save(appgs, file=paste0(tmp.folder, "/apgs.RData"))
# Añadimos las funciones finales a los pathways
fpgs <- add.functions.to.pathigraphs(appgs, entrez2hgnc, dbannot,
maxiter=1000)
save(fpgs, file=paste0(tmp.folder, "/fpgs.RData"))
# Computamos los valores de normalización de los paths
metaginfo <- create.metaginfo.object(fpgs, spe)
save(metaginfo, file=paste0(tmp.folder, "/meta_graph_info_", spe,
".RData"))
}
comp.list
transform.XML.to.SIF
load("private/pathways/compounds_list.RData")
View(compounds)
# Transformamos KGML a archivos SIF
transform.XML.to.SIF(pathway.names, kgml.folder, sif.folder, comp.list = compounds)
library(KEGGgraph)
library(igraph)
library(graph)
library(hipathia)
hipath <- setwd("/home/sromera/Documents/TFM/scripts_hipathia")
source(paste0(hipath, "/private/pathways/scripts/graphs.R"))
source(paste0(hipath, "/private/pathways/scripts/KEGG_net.R"))
source(paste0(hipath, "/private/pathways/scripts/layout.R"))
#home <- setwd("/home/sromera/R")
source(paste0(hipath, "/private/hipathia/R/utils.R"))
load("private/pathways/compounds_list.RData")
species <- "dme" # c("hsa", "rno", "mmu", "dme")
library(KEGGgraph)
library(igraph)
library(graph)
library(hipathia)
library(KEGGgraph)
library(igraph)
library(graph)
library(hipathia)
hipath <- setwd("/home/sromera/Documents/TFM/scripts_hipathia")
source(paste0(hipath, "/private/pathways/scripts/graphs.R"))
source(paste0(hipath, "/private/pathways/scripts/KEGG_net.R"))
source(paste0(hipath, "/private/pathways/scripts/layout.R"))
#home <- setwd("/home/sromera/R")
source(paste0(hipath, "/private/hipathia/R/utils.R"))
load("private/pathways/compounds_list.RData")
species <- "dme" # c("hsa", "rno", "mmu", "dme")
for(spe in species){
# Declaramos los directorios desde donde sacamos la información de las especies
kgml.folder <- paste0(hipath, "/private/pathways/", spe, "/kgml/")
sif.folder <- paste0(hipath, "/private/pathways/", spe, "/sif")
tmp.folder <- paste0(hipath, "/private/pathways/", spe, "/temp/")
ammend.file <- paste0(hipath, "/private/pathways/sif_amendments.txt")
pathway.names <- unique(gsub(".xml", "", list.files(kgml.folder,
pattern="xml")))
# Creamos nuevos directorios
if(!dir.exists(sif.folder))
dir.create(sif.folder)
if(!dir.exists(tmp.folder))
dir.create(tmp.folder)
# Cargamos las anotaciones con load_annots(base_de_datos,especie)
dbannot <- hipathia:::load_annots("uniprot", spe)
entrez2hgnc <- hipathia:::load_entrez_hgnc(spe) # Atento a este porque en el script de Marta va separado por puntos y no por _
# Procesar los ficheros KGML
#--------------------------------------------
# Creamos el fichero name_pathways.txt
create.pathway.names.file(pathway.names, spe, kgml.folder, sif.folder)
# Transformamos KGML a archivos SIF
transform.XML.to.SIF(pathway.names, kgml.folder, sif.folder, comp.list = compounds)
# Cargamos los pathways desde los archivos SIF
pgs <- load.graphs(sif.folder, spe)
save(pgs, file=paste0(tmp.folder, "/pgs.RData"))
# ¿Corregimos los pathways?
apgs <- amend.kegg.pathways(ammend.file, pgs, spe)
save(apgs, file=paste0(tmp.folder, "/apgs.RData"))
# Añadimos las funciones finales a los pathways
fpgs <- add.functions.to.pathigraphs(apgs, entrez2hgnc, dbannot,
maxiter=1000)
save(fpgs, file=paste0(tmp.folder, "/fpgs.RData"))
# Computamos los valores de normalización de los paths
metaginfo <- create.metaginfo.object(fpgs, spe)
save(metaginfo, file=paste0(tmp.folder, "/meta_graph_info_", spe,
".RData"))
}
hipathia:::load_annots
trace("is_acepted_species", edit=TRUE)
trace("hipathia:::is_acepted_species", edit=TRUE)
trace("hipathia:::is_acepted_species()", edit=TRUE)
trace(hipathia:::is_accepted_species(), edit=TRUE)
trace("hipathia:::is_accepted_species()", edit=TRUE)
find(hipathia:::is_accepted_species)
find("hipathia:::is_accepted_species")
??is_accepted_species
trace("hipathia::is_accepted_species()", edit=TRUE)
trace("hipathia::is_accepted_species", edit=TRUE)
trace("is_accepted_species", edit=TRUE)
trace("is_accepted_species()", edit=TRUE)
trace(is_accepted_species, edit=TRUE)
trace(hipathia::is_accepted_species, edit=TRUE)
hipathia::is_accepted_species
hipathia:::is_accepted_species
trace(hipathia:::is_accepted_species, edit=TRUE)
trace(hipathia:::is_accepted_species, edit=TRUE)
for(spe in species){
# Declaramos los directorios desde donde sacamos la información de las especies
kgml.folder <- paste0(hipath, "/private/pathways/", spe, "/kgml/")
sif.folder <- paste0(hipath, "/private/pathways/", spe, "/sif")
tmp.folder <- paste0(hipath, "/private/pathways/", spe, "/temp/")
ammend.file <- paste0(hipath, "/private/pathways/sif_amendments.txt")
pathway.names <- unique(gsub(".xml", "", list.files(kgml.folder,
pattern="xml")))
# Creamos nuevos directorios
if(!dir.exists(sif.folder))
dir.create(sif.folder)
if(!dir.exists(tmp.folder))
dir.create(tmp.folder)
# Cargamos las anotaciones con load_annots(base_de_datos,especie)
dbannot <- hipathia:::load_annots("uniprot", spe) # Ver anotaciones uniprot de Drosophila. Funcion hipathia:::load_annots
entrez2hgnc <- hipathia:::load_entrez_hgnc(spe) # Atento a este porque en el script de Marta va separado por puntos y no por _
# Procesar los ficheros KGML
#--------------------------------------------
# Creamos el fichero name_pathways.txt
create.pathway.names.file(pathway.names, spe, kgml.folder, sif.folder)
# Transformamos KGML a archivos SIF
transform.XML.to.SIF(pathway.names, kgml.folder, sif.folder, comp.list = compounds)
# Cargamos los pathways desde los archivos SIF
pgs <- load.graphs(sif.folder, spe)
save(pgs, file=paste0(tmp.folder, "/pgs.RData"))
# Corregimos los pathways
apgs <- amend.kegg.pathways(ammend.file, pgs, spe)
save(apgs, file=paste0(tmp.folder, "/apgs.RData"))
# Añadimos las funciones finales a los pathways
fpgs <- add.functions.to.pathigraphs(apgs, entrez2hgnc, dbannot,
maxiter=1000)
save(fpgs, file=paste0(tmp.folder, "/fpgs.RData"))
# Computamos los valores de normalización de los paths
metaginfo <- create.metaginfo.object(fpgs, spe)
save(metaginfo, file=paste0(tmp.folder, "/meta_graph_info_", spe,
".RData"))
}
hipathia:::load_annots
suppressMessages
hub
??suppressMessages
hub()
refpath <- setwd("/home/sromera/Documents/TFM/scripts_hipathia/local_hipathia/hpConstructor-master/RDatas_constructor/annotations/raw_data/dme/")
files <- list.files(path = refpath, pattern = "*.txt", full.names = TRUE)
files <- list.files(path = refpath, pattern = "*.txt")
refpath <- setwd("/home/sromera/Documents/TFM/scripts_hipathia/local_hipathia/hpConstructor-master/RDatas_constructor/xref/refs/dme/")
files <- list.files(path = refpath, pattern = "*.txt")
lapply(files, function(x) {
name <- string(x)
data <- read.table(x, sep = "\t", header = TRUE)
save(data, file = name + ".rda")
})
lapply(files, function(x) {
name <- x
data <- read.table(x, sep = "\t", header = TRUE)
save(data, file = name + ".rda")
})
files
setwd("/home/sromera/Documents/TFM/scripts_hipathia/local_hipathia/hpConstructor-master/RDatas_constructor/xref/refs/dme/")
entrez_ens <- read.table(file = "entrez_ens_dme_2.txt", sep = "\t", header = FALSE)
View(entrez_ens)
entrez_ens <- read.table(file = "entrez_ens_dme_2.txt", sep = "\t", header = TRUE)
entrez_names <- read.table(file = "entrez_gene_names.txt", sep = "\t", header = TRUE)
entrez_names <- read.table(file = "entrez_gene_names_dme_2.txt", sep = "\t", header = TRUE)
View(entrez_names)
entrez_ens <- read.table(file = "entrez_ens_dme_2.txt", sep = "\t", header = TRUE, quote = "")
entrez_names <- read.table(file = "entrez_gene_names_dme_2.txt", sep = "\t", header = TRUE, quote = "")
View(entrez_ens)
View(entrez_names)
View(entrez_ens)
View(entrez_names)
save(entrez_ens, file = "entrez_ens_dme.rda")
save(entrez_names, file = "entrez_gene_names_dme.rda")
setwd("/home/sromera/Documents/TFM/scripts_hipathia/local_hipathia/hpConstructor-master/RDatas_constructor/annotations/raw_data/dme/")
dme_go <- read.table(file = "gene_GO_association_dme.txt", sep = "\t", header = TRUE, quote = "")
raw_entrez_names <- read.table(file = "raw_entrez_genename_dme.txt", sep = "\t", header = TRUE, quote = "")
uniprot <- read.table(file = "uniprot_dme_keywords_noprime.annots", sep = "\t", header = TRUE, quote = "")
save(dme_go, file = "gene_GO_association_dme_rda")
save(dme_go, file = "gene_GO_association_dme.rda")
save(raw_entrez_names, file = "raw_entrez_genename_dme.rda")
save(uniprot, file = "uniprot_dme_keywords_noprime.rda")
library(KEGGgraph)
library(igraph)
library(graph)
library(devtools)
setwd("/home/sromera/Documents/TFM/scripts_hipathia/local_hipathia/hipathia-master/")
load_all()
hipath <- setwd("/home/sromera/Documents/TFM/scripts_hipathia")
source(paste0(hipath, "/local_hipathia/hpConstructor-master/RDatas_constructor/pathways/scripts/new_version/graphs.R"))
source(paste0(hipath, "/local_hipathia/hpConstructor-master/RDatas_constructor/pathways/scripts/new_version/KEGG_net.R"))
source(paste0(hipath, "/local_hipathia/hpConstructor-master/RDatas_constructor/pathways/scripts/new_version/layout.R"))
#home <- setwd("/home/sromera/R")
source(paste0(hipath, "/local_hipathia/hipathia-master/R/utils.R"))
load("/home/sromera/Documents/TFM/scripts_hipathia/local_hipathia/hpConstructor-master/RDatas_constructor/pathways/compounds_list.txt")
load("/home/sromera/Documents/TFM/scripts_hipathia/local_hipathia/hpConstructor-master/RDatas_constructor/pathways/compounds_list.RData")
trace(hipathia:::is_accepted_species, edit=TRUE)
species <- "dme" # c("hsa", "rno", "mmu", "dme")
# # for(spe in species){
#
#   # Declaramos los directorios desde donde sacamos la información de las especies
#   kgml.folder <- paste0(hipath, "/private/pathways/", spe, "/kgml/")
#   sif.folder <- paste0(hipath, "/private/pathways/", spe, "/sif")
#   tmp.folder <- paste0(hipath, "/private/pathways/", spe, "/temp/")
#   ammend.file <- paste0(hipath, "/private/pathways/sif_amendments.txt")
#   pathway.names <- unique(gsub(".xml", "", list.files(kgml.folder,
#                                                       pattern="xml")))
#   # Creamos nuevos directorios
#   if(!dir.exists(sif.folder))
#     dir.create(sif.folder)
#   if(!dir.exists(tmp.folder))
#     dir.create(tmp.folder)
#
#   # Cargamos las anotaciones con load_annots(base_de_datos,especie)
#   dbannot <- hipathia:::load_annots("uniprot", spe) # Ver anotaciones uniprot de Drosophila. Funcion hipathia:::load_annots
#   entrez2hgnc <- hipathia:::load_entrez_hgnc(spe) # Atento a este porque en el script de Marta va separado por puntos y no por _
#
#   # Procesar los ficheros KGML
#   #--------------------------------------------
#   # Creamos el fichero name_pathways.txt
#   create.pathway.names.file(pathway.names, spe, kgml.folder, sif.folder)
#
#   # Transformamos KGML a archivos SIF
#   transform.XML.to.SIF(pathway.names, kgml.folder, sif.folder, comp.list = compounds)
#
#   # Cargamos los pathways desde los archivos SIF
#   pgs <- load.graphs(sif.folder, spe)
#   save(pgs, file=paste0(tmp.folder, "/pgs.RData"))
#
#   # Corregimos los pathways
#
#   apgs <- amend.kegg.pathways(ammend.file, pgs, spe)
#   save(apgs, file=paste0(tmp.folder, "/apgs.RData"))
#
#   # Añadimos las funciones finales a los pathways
#   fpgs <- add.functions.to.pathigraphs(apgs, entrez2hgnc, dbannot,
#                                        maxiter=1000)
#   save(fpgs, file=paste0(tmp.folder, "/fpgs.RData"))
#
#   # Computamos los valores de normalización de los paths
#   metaginfo <- create.metaginfo.object(fpgs, spe)
#   save(metaginfo, file=paste0(tmp.folder, "/meta_graph_info_", spe,
#                               ".RData"))
# }
# Declaramos los directorios desde donde sacamos la información de las especies
kgml.folder <- paste0(hipath, "/local_hipathia/hpConstructor-master/RDatas_constructor/pathways/XMLs/", species, "/kgml/")
sif.folder <- paste0(hipath, "/local_hipathia/hpConstructor-master/RDatas_constructor/pathways/XMLs/", species, "/sif")
tmp.folder <- paste0(hipath, "/local_hipathia/hpConstructor-master/RDatas_constructor/pathways/XMLs/", species, "/temp/")
ammend.file <- paste0(hipath, "/local_hipathia/hpConstructor-master/RDatas_constructor/pathways/XMLs/sif_amendments.txt")
pathway.names <- unique(gsub(".xml", "", list.files(kgml.folder,
pattern="xml")))
# Creamos nuevos directorios
if(!dir.exists(sif.folder))
dir.create(sif.folder)
if(!dir.exists(tmp.folder))
dir.create(tmp.folder)
# Creamos el fichero name_pathways.txt
create.pathway.names.file(pathway.names, spe, kgml.folder, sif.folder)
# Creamos el fichero name_pathways.txt
create.pathway.names.file(pathway.names, species, kgml.folder, sif.folder)
#   # Transformamos KGML a archivos SIF
transform.XML.to.SIF(pathway.names, kgml.folder, sif.folder, comp.list = compounds)
#   # Transformamos KGML a archivos SIF
transform.XML.to.SIF(pathway.names, kgml.folder, sif.folder, comp.list = compounds)
# Creamos el fichero name_pathways.txt
create.pathway.names.file(pathway.names, species, kgml.folder, sif.folder)
#   # Transformamos KGML a archivos SIF
transform.XML.to.SIF(pathway.names, kgml.folder, sif.folder, comp.list = compounds)
# Cargamos los pathways desde los archivos SIF
pgs <- load.graphs(sif.folder, species)
# Cargamos los pathways desde los archivos SIF
pgs <- load.graphs(sif.folder, species)
# Cargamos los pathways desde los archivos SIF
pgs <- load.graphs(sif.folder, species)
